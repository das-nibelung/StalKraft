#!/bin/bash

set -e

REGISTRY="127.0.0.1:5500"
IMAGES=(
  "nginx:1.24"
  "python:3.12"
  "node:20-alpine"
  "postgres:15"
  "alpine:latest"
)

# –ü—Ä–æ–≤–µ—Ä–∫–∞: –¥–æ—Å—Ç—É–ø–µ–Ω –ª–∏ —Ä–µ–µ—Å—Ç—Ä
curl -s "http://$REGISTRY/v2/" > /dev/null || {
  echo "‚ùå Registry $REGISTRY –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –£–±–µ–¥–∏—Å—å, —á—Ç–æ –æ–Ω –∑–∞–ø—É—â–µ–Ω."
  exit 1
}

for image in "${IMAGES[@]}"; do
  echo "-----------------------------"
  echo "üì¶ –û–±—Ä–∞–±–æ—Ç–∫–∞: $image"
  name=$(echo "$image" | cut -d':' -f1)
  tag=$(echo "$image" | cut -d':' -f2)
  remote_tag="$REGISTRY/$name:$tag"

  # –ü—Ä–æ–≤–µ—Ä–∫–∞: –µ—Å—Ç—å –ª–∏ —Ç–∞–∫–æ–π –æ–±—Ä–∞–∑ –≤ —Ä–µ–µ—Å—Ç—Ä–µ
  repo_url="http://$REGISTRY/v2/$name/tags/list"
  exists=$(curl -s "$repo_url" | jq -r ".tags[]?" | grep -Fx "$tag" || true)

  if [ "$exists" == "$tag" ]; then
    echo "‚úÖ –£–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ registry: $remote_tag ‚Äî –ø—Ä–æ–ø—É—Å–∫–∞–µ–º push"
    continue
  fi

  echo "üì• –°–∫–∞—á–∏–≤–∞–µ–º $image"
  docker pull "$image"

  echo "üîÅ –¢–µ–≥–∏—Ä—É–µ–º –∫–∞–∫ $remote_tag"
  docker tag "$image" "$remote_tag"

  echo "üì§ –ü—É—à–∏–º $remote_tag"
  docker push "$remote_tag"

  echo "üßπ –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ç–µ–≥"
  docker rmi "$remote_tag"
done

echo "‚úÖ –ì–æ—Ç–æ–≤–æ. –í—Å–µ –æ–±—Ä–∞–∑—ã –æ–±—Ä–∞–±–æ—Ç–∞–Ω—ã."

